{"version":3,"sources":["services/localStorage.js","services/api.js","components/usersPage/tablecontext.js","components/usersPage/userContext.js","components/spinner/spinner.tsx","services/validator.js","components/iputFild/inputFild.tsx","components/selectFild/selectFild.js","components/formMessage/formMessage.tsx","components/userCard/userCard.js","components/usersPage/userTableRow.js","components/stats/statsPage.js","components/main/main.js","components/usersPage/workbench.js","components/logIn/login.js","components/signUp/signup.js","App.js","serviceWorker.js","index.js"],"names":["removeLocalUser","localStorage","removeItem","loginUser","user","a","async","apiRes","axios","post","servRes","data","result","setItem","JSON","stringify","console","error","response","status","message","logoutUser","get","document","location","href","getAllUsers","length","deleteUser","usersId","createUser","userData","log","updateUser","id","put","uploadUserPhoto","file","formData","FormData","append","headers","fileName","sendCsv","TableContext","React","createContext","UserContext","Spiner","className","css","color","Validator","str","testStr","trim","this","maxLength","len","minLength","isEmail","test","isPhoneNumber","noSpe—ÅialChar","testPassword","mediumRegex","RegExp","InputFild","options","onValid","useState","value","fild","setFild","errorMessage","setErrorMessage","isBlur","setIsBlur","useEffect","type","onChange","e","inputValue","target","testValue","onBlur","disabled","htmlFor","label","SelectFild","memo","selectVal","setSelectVal","selectors","map","item","i","key","val","name","FormMessage","props","messangeType","messange","Card","onClose","updateTable","useContext","login","setLogin","password","setPassword","email","setEmail","phone","setPhone","formMessage","setFormMessage","usergroup","setUsergroup","saveBtn","setSaveBtn","spinnerState","setSpinerState","undefined","photo","userPhoto","setUserPoto","storePath","imgPath","setImgPath","uploadMsg","setUploadMsg","userId","loginName","online","src","alt","preventDefault","files","msg","process","registrated","moment","format","lastVisit","onClick","Row","actionSelect","actionShowUser","checked","isSelected","Stats","labels","values","title","colors","roughness","strokeWidth","month","A","B","C","routes","path","exact","main","setUserData","open","userCard","setUserCard","usersSelected","setUsersSelected","selectAll","setSelectAll","show","setcsvRes","getUsers","calcSelected","state","toDelete","forEach","push","Provider","classList","contains","find","Main","activeClassName","to","route","index","children","AdminPrivateRoute","rest","render","pathname","from","Login","loginBtn","useRef","ref","signBtn","setTimeout","dotenv","config","isLogined","parse","getItem","getLocalUser","PrivateRoute","Boolean","window","hostname","match","ReactDOM","setUser","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a5e760e.chunk.js","sourcesContent":["export function setLocalUser(data) {\n  localStorage.setItem(\"userData\", JSON.stringify(data));\n}\n\nexport function getLocalUser() {\n  const data = JSON.parse(localStorage.getItem(\"userData\"));\n  if (data) {\n    return data;\n  }\n  return false;\n}\n\nexport function removeLocalUser() {\n  localStorage.removeItem(\"userData\");\n}\n\nexport function clearLocalStorage() {\n  localStorage.clear();\n}\n","import axios from \"axios\";\nimport { setLocalUser, removeLocalUser } from \"./localStorage\";\n\nexport async function loginUser(user) {\n  let apiRes = {};\n  try {\n    const servRes = await axios.post(\"./users/login\", user);\n    if (typeof servRes.data.result === \"object\") {\n      setLocalUser(servRes.data.result);\n      apiRes.result = true;\n    }\n    console.error(\"servRes.data.result\");\n  } catch (error) {\n    if (error.response.status === 500) {\n      apiRes.error = \"Server does not respond.\";\n    } else {\n      apiRes.error = error.response.data.message;\n    }\n  }\n  return apiRes;\n}\n\nexport async function logoutUser() {\n  try {\n    await axios.get(\"./users/logout\");\n    removeLocalUser();\n    document.location.href = \"/\";\n  } catch (error) {\n    if (error.response.status === 500) {\n      return \"Server does not respond.\";\n    }\n    return error.response.data.message;\n  }\n}\n\nexport async function getAllUsers() {\n  let apiRes = {};\n  try {\n    const servRes = await axios.get(\"/users/get\");\n    if (servRes.data.result.length > 0) {\n      apiRes.result = servRes.data.result;\n    } else {\n      apiRes.error = \"No users in the database\";\n    }\n  } catch (error) {\n    if (error.response.status === 401) {\n      removeLocalUser();\n      document.location.href = \"/\";\n    } else {\n      apiRes.error = \"Server does not respond.\";\n    }\n  }\n  return apiRes;\n}\n\nexport async function deleteUser(usersId) {\n  let apiRes = {};\n  try {\n    const servRes = await axios.post(\"/users/delete\", usersId);\n    apiRes.result = servRes.data.result;\n  } catch (error) {\n    if (error.response.status === 500) {\n      apiRes.error = \"Server does not respond.\";\n    } else {\n      apiRes.error = error.response.data.message;\n    }\n  }\n  return apiRes;\n}\n\nexport async function createUser(userData) {\n  //temp userData.photo\n  // userData.photo = \"user.svg\";\n  let apiRes = {};\n  try {\n    const servRes = await axios.post(\"/users/create\", userData);\n    console.log(servRes.data.status);\n\n    if (servRes.data.status === 1) {\n      apiRes.result = true;\n    } else {\n      apiRes.error = servRes.data.error;\n    }\n  } catch (error) {\n    if (error.response.status === 500) {\n      apiRes.error = \"Server does not respond.\";\n    }\n    apiRes.error = error.response.data.message;\n    // TODO: type of user\n  }\n  return apiRes;\n}\n\nexport async function updateUser(id, userData) {\n  let apiRes = {};\n  try {\n    const servRes = await axios.put(`/users/update/${id}`, userData);\n    apiRes.result = servRes.data.result;\n  } catch (error) {\n    if (error.response.status === 500) {\n      apiRes.error = \"Server does not respond.\";\n    } else {\n      apiRes.error = error.response.data.message;\n    }\n  }\n  return apiRes;\n}\n\nexport async function uploadUserPhoto(file) {\n  let apiRes = {};\n  try {\n    const formData = new FormData();\n    formData.append(\"photo\", file[0]);\n    const servRes = await axios.post(\"files/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    apiRes.fileName = servRes.data.result;\n  } catch (error) {\n    if (error.response.status === 500) {\n      apiRes.error = \"Server does not respond.\";\n    } else {\n      apiRes.error = error.response.data.message;\n    }\n  }\n  return apiRes;\n}\n\nexport async function sendCsv(file) {\n  let apiRes = {};\n  try {\n    const formData = new FormData();\n    formData.append(\"csvFile\", file[0]);\n    const servRes = await axios.post(\"/users/csv\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n\n    apiRes.result = servRes.data.result;\n  } catch (error) {\n    if (error.response.status === 500) {\n      apiRes.error = \"Server does not respond.\";\n    } else {\n      apiRes.error = error.response.data.message;\n    }\n  }\n  return apiRes;\n}\n","import React from \"react\";\nexport const TableContext = React.createContext();\n","import React from \"react\";\nexport const UserContext = React.createContext();\n","import React from \"react\";\nimport { ScaleLoader } from \"react-spinners\";\nimport \"./spinner.scss\";\n\nconst override = `\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst Spiner: React.FC = () => {\n  return (\n    <div className=\"sweet-loading\">\n      <ScaleLoader\n        css={override}\n        //size={150}\n        //size={\"150px\"} this also works\n        color={\"#065a69\"}\n        //loading={}\n      />\n    </div>\n  );\n};\n\nexport default Spiner;\n","export default function Validator(str) {\n  const testStr = str.trim();\n  this.maxLength = function(len) {\n    if (testStr.length > len) {\n      return false;\n    }\n    return true;\n  };\n\n  this.minLength = function(len) {\n    if (testStr.length < len) {\n      return false;\n    }\n    return true;\n  };\n\n  this.isEmail = function() {\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(testStr)) {\n      return true;\n    }\n    return false;\n  };\n  this.isPhoneNumber = function() {\n    if (/\\+38[0-9]{10,10}$/.test(testStr)) {\n      return true;\n    }\n    return false;\n  };\n  this.noSpe—ÅialChar = function() {\n    if (/[-\\/\\\\^$*?()|[\\]{}]/g.test(testStr)) {\n      return true;\n    }\n    return false;\n  };\n\n  this.testPassword = function() {\n    const mediumRegex = new RegExp(\n      \"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\"\n    );\n    const strongRegex = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    );\n    if (strongRegex.test(testStr)) {\n      return 2;\n    }\n    if (mediumRegex.test(testStr)) {\n      return 1;\n    }\n    return 0;\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport Validator from \"../../services/validator\";\nimport \"./inputFild.scss\";\n\ninterface IOptions {\n  type: string;\n  id: string;\n  value: string;\n  disabled: boolean;\n  label: string;\n}\n\ninterface IProps {\n  options: IOptions;\n  onValid: (param: string | boolean) => boolean;\n}\n\nconst InputFild: React.FC<IProps> = ({ options, onValid }) => {\n  const [fild, setFild] = useState<string>(options.value || \"\");\n  const [errorMessage, setErrorMessage] = useState<string | boolean>(false);\n  const [isBlur, setIsBlur] = useState<boolean>(false);\n\n  const fildChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    let inputValue: string = e.target.value.trim();\n    const testValue = new Validator(inputValue);\n    let isSpecial: boolean = testValue.noSpe—ÅialChar();\n    if (isSpecial) {\n      setIsBlur(true);\n      setErrorMessage(`Not allowed special characters ( -/^$*?()|[]{}\\\\ )`);\n    } else {\n      switch (e.target.id) {\n        case \"login\":\n          setErrorMessage(true);\n          if (!testValue.maxLength(50)) {\n            setErrorMessage(\"Login is too long!\");\n          } else if (!testValue.minLength(3)) {\n            setErrorMessage(\"Login is too short!\");\n          } else {\n            setErrorMessage(false);\n          }\n          break;\n\n        case \"password\":\n          setErrorMessage(true);\n          switch (testValue.testPassword()) {\n            case 0:\n              setErrorMessage(\n                \"Password must have at least 6 characters and include numbers and letters\"\n              );\n              break;\n            default:\n              setErrorMessage(false);\n              break;\n          }\n          break;\n\n        case \"email\":\n          setErrorMessage(false);\n          if (!testValue.isEmail() && inputValue.length > 0) {\n            setErrorMessage(\"Email Address not valid\");\n          }\n          break;\n\n        case \"phone\":\n          setErrorMessage(false);\n          if (inputValue.length < 4) {\n            inputValue = \"+38\";\n            setErrorMessage(false);\n          } else {\n            if (!/(^\\+38\\d+$)/.test(inputValue) && inputValue.length > 3) {\n              setErrorMessage(\"Phone number is not valid\");\n              inputValue = fild;\n            }\n            if (inputValue.length > 13) {\n              inputValue = fild;\n            }\n            if (inputValue.length < 13 && !testValue.isPhoneNumber()) {\n              setErrorMessage(\"Phone number is not valid\");\n            }\n          }\n          break;\n        default:\n          break;\n      }\n      setFild(inputValue);\n    }\n  };\n\n  useEffect(() => {\n    if (!errorMessage) {\n      if (options.id === \"phone\") {\n        onValid(\"\");\n      } else {\n        onValid(fild);\n      }\n    } else {\n      onValid(false);\n    }\n  }, [errorMessage, fild, onValid]);\n\n  return (\n    <div className=\"mui-textfield\">\n      <input\n        type={options.type}\n        id={options.id}\n        value={fild}\n        onChange={fildChange}\n        onBlur={e => {\n          setIsBlur(true);\n        }}\n        disabled={options.disabled}\n      />\n      <label htmlFor={options.id}>{options.label}</label>\n      <span className=\"errors\">{isBlur && errorMessage}</span>\n    </div>\n  );\n};\nexport default InputFild;\n","import React, { useState, memo } from \"react\";\n\nconst SelectFild = memo(({ options, onChange }) => {\n  const [selectVal, setSelectVal] = useState(options.value);\n\n  const actionChange = e => {\n    setSelectVal(e.target.value);\n    onChange(e.target.value);\n  };\n\n  return (\n    <div className=\"mui-select\">\n      <select\n        id={options.id}\n        value={selectVal}\n        onChange={actionChange}\n        disabled={options.disabled}\n      >\n        {options.selectors.map((item, i) => (\n          <option key={i} value={item.val}>\n            {item.name}\n          </option>\n        ))}\n      </select>\n      <label htmlFor={options.id}>{options.label}</label>\n    </div>\n  );\n});\nexport default SelectFild;\n","import React from \"react\";\nimport \"./formMessage.scss\";\n\ninterface Props {\n  messange: string;\n  type: number;\n}\n\nconst FormMessage: React.FC<Props> = props => {\n  let messangeType: String = \"\";\n  switch (props.type) {\n    case 0:\n      messangeType = \"successful\";\n      break;\n    case 1:\n      messangeType = \"warning\";\n      break;\n    case 2:\n      messangeType = \"error\";\n      break;\n\n    default:\n      break;\n  }\n  return (\n    <div className={`form-message ${messangeType}`}>\n      <span className={`form-message-text`}>{props.messange} </span>\n    </div>\n  );\n};\n\nexport default FormMessage;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"./userCard.scss\";\nimport InputFild from \"../iputFild/inputFild\";\nimport SelectFild from \"../selectFild/selectFild\";\nimport Spiner from \"../spinner/spinner\";\nimport FormMessage from \"../formMessage/formMessage\";\nimport { createUser, updateUser, uploadUserPhoto } from \"../../services/api\";\nimport { UserContext } from \"../usersPage/userContext\";\nimport * as moment from \"moment\";\n\nexport default function Card({ userData, onClose, updateTable }) {\n  const { user } = useContext(UserContext);\n  const [login, setLogin] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [email, setEmail] = useState(true);\n  const [phone, setPhone] = useState(true);\n  const [formMessage, setFormMessage] = useState(false);\n  const [usergroup, setUsergroup] = useState(userData.usergroup || \"user\");\n  const [saveBtn, setSaveBtn] = useState(false);\n  const [spinnerState, setSpinerState] = useState(false);\n  const [userPhoto, setUserPoto] = useState(\n    userData.photo !== undefined && userData.photo.length > 0\n      ? userData.photo[0].fileName\n      : false\n  );\n  const [imgPath, setImgPath] = useState(\n    userData.photo !== undefined && userData.photo.length > 0\n      ? userData.photo[0].storePath\n      : false\n  );\n  const [uploadMsg, setUploadMsg] = useState(false);\n\n  useEffect(() => {\n    if (userData.userId) {\n      setPassword(true);\n    }\n    if (\n      login &&\n      password &&\n      email !== false &&\n      phone !== false &&\n      user.usergroup === \"admin\"\n    ) {\n      if (\n        userData.loginName !== login ||\n        userData.email !== email ||\n        userData.phone !== phone ||\n        userData.usergroup !== usergroup ||\n        userData.photo !== userPhoto\n      ) {\n        setSaveBtn(true);\n      }\n    } else {\n      setSaveBtn(false);\n    }\n  }, [login, password, email, phone, usergroup, userPhoto]);\n\n  const cardClose = e => {\n    e.preventDefault();\n    onClose();\n  };\n\n  const uploadPhoto = async e => {\n    e.preventDefault();\n    const apiRes = await uploadUserPhoto(e.target.files);\n\n    if (apiRes.fileName) {\n      setUserPoto(apiRes.fileName);\n      setImgPath(`/uploads/`);\n    }\n    if (apiRes.error) {\n      setUploadMsg({ msg: apiRes.error, type: 2 });\n    } else {\n      setUploadMsg(false);\n    }\n  };\n\n  const cardSave = async e => {\n    e.preventDefault();\n    setFormMessage(false);\n    setSpinerState(true);\n    if (userData.userId) {\n      const apiRes = await updateUser(userData.userId, {\n        loginName: login,\n        email: email,\n        phone: phone,\n        usergroup: usergroup,\n        photo: userPhoto\n      });\n      setSpinerState(false);\n      if (apiRes.result) {\n        setFormMessage({ msg: \"User successfully updated\", type: 0 });\n        updateTable();\n      } else {\n        setFormMessage({ msg: apiRes.error, type: 2 });\n      }\n    } else {\n      const apiRes = await createUser({\n        loginName: login,\n        password: password,\n        email: email,\n        phone: phone,\n        usergroup: usergroup,\n        photo: userPhoto\n      });\n      setSpinerState(false);\n      if (!apiRes.error) {\n        setFormMessage({ msg: \"New user was created successfully\", type: 0 });\n        updateTable();\n      } else {\n        setFormMessage({ msg: apiRes.error, type: 2 });\n      }\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2>{userData.userId ? `UserID: ${userData.userId}` : \"New User\"}</h2>\n        <span\n          className={\n            userData.online ? \"status status-online\" : \"status status-offline\"\n          }\n        >\n          {userData.online ? \"onLine\" : \"offLine\"}\n        </span>\n      </div>\n      <form className=\"mui-form\">\n        <div className=\"form-body\">\n          <div className=\"user-photo-wr \">\n            <img\n              src={userPhoto ? imgPath + userPhoto : \"/img/user.svg\"}\n              alt=\"user-photo\"\n              className=\"user-photo\"\n            />\n            <div className=\"upload-btn-wrapper\">\n              <button className=\"mui-btn mui-btn--raised\">Upload photo</button>\n              <input type=\"file\" name=\"myfile\" onChange={uploadPhoto} />\n            </div>\n            {uploadMsg && (\n              <FormMessage messange={uploadMsg.msg} type={uploadMsg.type} />\n            )}\n          </div>\n          <div className=\"text-filds\">\n            <InputFild\n              options={{\n                type: \"text\",\n                id: \"login\",\n                label: \"Login:\",\n                value: userData.loginName,\n                disabled: user.usergroup !== process.env.REACT_APP_USER_ADMIN\n              }}\n              onValid={setLogin}\n            />\n            {!userData.userId && (\n              <InputFild\n                options={{\n                  type: \"password\",\n                  id: \"password\",\n                  label: \"Password:\",\n                  value: \"\",\n                  disabled: user.usergroup !== process.env.REACT_APP_USER_ADMIN\n                }}\n                onValid={setPassword}\n              />\n            )}\n            <InputFild\n              options={{\n                type: \"text\",\n                id: \"email\",\n                label: \"E-mail:\",\n                value: userData.email,\n                disabled: user.usergroup !== process.env.REACT_APP_USER_ADMIN\n              }}\n              onValid={setEmail}\n            />\n            <InputFild\n              options={{\n                type: \"text\",\n                id: \"phone\",\n                label: \"Phone:\",\n                value: userData.phone || \"+38\",\n                disabled: user.usergroup !== process.env.REACT_APP_USER_ADMIN\n              }}\n              onValid={setPhone}\n            />\n            <SelectFild\n              options={{\n                id: \"usergroup\",\n                value: usergroup,\n                label: \"Usergroup:\",\n                disabled: user.usergroup !== process.env.REACT_APP_USER_ADMIN,\n                selectors: [\n                  { val: \"user\", name: \"User\" },\n                  { val: \"admin\", name: \"Admin\" },\n                  { val: \"superAdmin\", name: \"SuperAdmin\" }\n                ]\n              }}\n              onChange={setUsergroup}\n            />\n\n            {userData.registrated && (\n              <p>\n                Registrated:{\" \"}\n                {moment(userData.registrated).format(\"MMM DD hh:mm:ss\")}\n              </p>\n            )}\n            {userData.registrated && (\n              <p>\n                Last Visit:{\" \"}\n                {moment(userData.lastVisit).format(\"MMM DD hh:mm:ss\")}\n              </p>\n            )}\n          </div>\n        </div>\n        <div className=\"form-footer\">\n          {spinnerState && <Spiner />}\n          {formMessage && (\n            <FormMessage messange={formMessage.msg} type={formMessage.type} />\n          )}\n          {saveBtn && (\n            <button\n              onClick={cardSave}\n              className=\"mui-btn  mui-btn--raised mui-btn--primary\"\n            >\n              Save\n            </button>\n          )}\n          <button onClick={cardClose} className=\"mui-btn mui-btn--raised\">\n            Close\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useContext, memo } from \"react\";\nimport { TableContext } from \"./tablecontext\";\nimport * as moment from \"moment\";\n\nconst Row = memo(({ userData }) => {\n  const { actionSelect, actionShowUser } = useContext(TableContext);\n\n  return (\n    <tr\n      onClick={e => {\n        actionShowUser(e, userData.userId);\n      }}\n    >\n      <td className=\"checkbox\">\n        <input\n          className=\"checkbox-input\"\n          type=\"checkbox\"\n          name=\"select\"\n          checked={userData.isSelected || false}\n          onChange={() => {\n            actionSelect(userData.userId);\n          }}\n        />\n      </td>\n      {/* <td className=\"name\">{userData.name}</td> */}\n      <td>{userData.loginName}</td>\n      <td>{userData.email}</td>\n      <td>{userData.phone}</td>\n      <td>{userData.usergroup}</td>\n      <td>{moment(userData.lastVisit).format(\"MMM DD hh:mm:ss\")}</td>\n      <td>{moment(userData.registrated).format(\"MMM DD hh:mm:ss\")}</td>\n      {/* <td>{userData._id}</td> */}\n    </tr>\n  );\n});\n\nexport default React.memo(Row);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Bar, Pie, StackedBar } from \"react-roughviz\";\n\nexport default function Stats() {\n  return (\n    <>\n      <h1 className=\"section-header\">APP Stat</h1>\n      <h3>Bar</h3>\n      <Bar\n        data=\"https://raw.githubusercontent.com/jwilber/random_data/master/flavors.csv\"\n        labels=\"flavor\"\n        values=\"price\"\n      />\n      <h3>Pie</h3>\n      <Pie\n        data={{\n          labels: [\"North\", \"South\", \"East\", \"West\"],\n          values: [10, 5, 8, 3]\n        }}\n        title=\"Regions\"\n        colors={[\"red\", \"orange\", \"blue\", \"skyblue\"]}\n        roughness={8}\n        strokeWidth={3}\n      />\n      <StackedBar\n        data={[\n          { month: \"Jan\", A: 20, B: 5, C: 10 },\n          { month: \"Feb\", A: 25, B: 10, C: 20 },\n          { month: \"March\", A: 30, B: 50, C: 10 }\n        ]}\n        labels=\"month\"\n        title=\"Monthly Revenue\"\n      />\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport User from \"../usersPage/workbench\";\nimport Stats from \"../stats/statsPage\";\nimport { logoutUser } from \"../../services/api\";\nimport { UserContext } from \"../usersPage/userContext\";\nimport \"./main.scss\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: () => <h2 className=\"section-header\">Main page</h2>\n  },\n  {\n    path: \"/users\",\n    main: User\n  },\n  {\n    path: \"/posts\",\n    main: () => <h2 className=\"section-header\">Posts</h2>\n  }\n];\n\nexport default function Main() {\n  const { user } = useContext(UserContext);\n\n  return (\n    <Router>\n      <div className=\"main\">\n        <div className=\"side-bar\">\n          <div className=\"user\">\n            <img\n              src={\n                user.photo.length > 0\n                  ? user.photo[0].storePath + user.photo[0].fileName\n                  : \"./img/user.svg\"\n              }\n              alt=\"user\"\n              className=\"user-img\"\n            />\n            <h4 className=\"user-welcome\">Hi, {user.loginName}</h4>\n            <p className=\"user-right\">\n              You are <strong>{user.usergroup}</strong>\n            </p>\n            <button onClick={logoutUser} className=\"user-logout\">\n              Logout...\n            </button>\n          </div>\n\n          <hr />\n\n          <ul className=\"bar-nav\">\n            <li>\n              <NavLink activeClassName=\"active\" exact to=\"/\">\n                Main page\n              </NavLink>\n            </li>\n\n            <li>\n              <NavLink activeClassName=\"active\" exact to=\"/users\">\n                Users\n              </NavLink>\n            </li>\n            <li>\n              <NavLink activeClassName=\"active\" exact to=\"/posts\">\n                Posts\n              </NavLink>\n            </li>\n            {user.usergroup === process.env.REACT_APP_USER_ADMIN && (\n              <li>\n                <NavLink to=\"/stats\" exact activeClassName=\"active\">\n                  APP stats\n                </NavLink>\n              </li>\n            )}\n          </ul>\n          <hr />\n        </div>\n\n        <div className=\"work-flow\">\n          <Switch>\n            {routes.map((route, index) => (\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n            <AdminPrivateRoute path=\"/stats\">\n              <Stats />\n            </AdminPrivateRoute>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nfunction AdminPrivateRoute({ children, ...rest }) {\n  const { user } = useContext(UserContext);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user.usergroup === process.env.REACT_APP_USER_ADMIN ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport \"./user.scss\";\nimport { getAllUsers, deleteUser, sendCsv } from \"../../services/api\";\nimport { TableContext } from \"./tablecontext\";\nimport { UserContext } from \"./userContext\";\nimport Spiner from \"../spinner/spinner\";\nimport UserCard from \"../userCard/userCard\";\nimport Popup from \"../popup/popup\";\nimport TableRow from \"./userTableRow\";\nimport FormMessage from \"../formMessage/formMessage\";\n\nexport default function UserWorkBench() {\n  const { user } = useContext(UserContext);\n  const [userData, setUserData] = useState([]);\n  const [userCard, setUserCard] = useState({\n    open: false,\n    data: {}\n  });\n  const [usersSelected, setUsersSelected] = useState(0);\n  const [spinnerState, setSpinerState] = useState(false);\n  const [formMessage, setFormMessage] = useState(false);\n  const [selectAll, setSelectAll] = useState(false);\n  const [csvRes, setcsvRes] = useState({ data: {}, show: true });\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    setSpinerState(true);\n    const apiRes = await getAllUsers();\n    setSpinerState(false);\n    setFormMessage(false);\n    setUsersSelected(0);\n    if (!apiRes.error) {\n      setUserData(apiRes.result);\n    } else {\n      setFormMessage({\n        msg: apiRes.error,\n        type: 2\n      });\n    }\n  };\n\n  // const updateTable = useCallback(() => getUsers());\n\n  const actionCardClose = () => {\n    setUserCard(state => ({ ...state, open: false, data: {} }));\n  };\n\n  const actionAddNew = () => {\n    setUserCard(state => ({ ...state, open: true }));\n  };\n\n  const actionShowUser = (e, id) => {\n    if (\n      e.target.type !== \"checkbox\" &&\n      !e.target.classList.contains(\"checkbox\")\n    ) {\n      const user = userData.find(item => item.userId === id);\n      setUserCard(state => ({ ...state, open: true, data: user }));\n    }\n  };\n\n  const actionSelect = id => {\n    let calcSelected = 0;\n    const data = userData.map(item => {\n      if (item.userId === id || !id) {\n        item.isSelected = !item.isSelected;\n      }\n      if (item.isSelected) {\n        calcSelected += 1;\n      }\n      return item;\n    });\n    setUserData(data);\n    setUsersSelected(calcSelected);\n  };\n\n  const actionDeleteSelected = async () => {\n    setSpinerState(true);\n    let toDelete = [];\n    userData.forEach(item => {\n      if (item.isSelected) {\n        toDelete.push(item.userId);\n      }\n    });\n    const apiRes = await deleteUser(toDelete);\n    setSpinerState(false);\n    if (apiRes.result) {\n      getUsers();\n    } else {\n      setFormMessage({ msg: apiRes.error, type: 2 });\n    }\n  };\n\n  const actionSendCsv = async e => {\n    e.preventDefault();\n    const apiRes = await sendCsv(e.target.files);\n    setcsvRes({ data: apiRes, show: true });\n    console.log(apiRes);\n    getUsers();\n  };\n\n  return (\n    <>\n      {userCard.open && (\n        <UserCard\n          onClose={actionCardClose}\n          userData={userCard.data}\n          updateTable={getUsers}\n        />\n      )}\n      {/* {//csvRes.show && <Popup data={csvRes.data} />} */}\n      <h2 className=\"section-header\">Users</h2>\n      {user.usergroup === \"admin\" && (\n        <div className=\"action-bar\">\n          <button\n            onClick={actionAddNew}\n            className=\"mui-btn mui-btn--small mui-btn--raised\"\n          >\n            ADD User\n          </button>\n          <div className=\"upload-btn-wrapper\">\n            <button className=\"mui-btn mui-btn--raised\">ADD from csv</button>\n            <input type=\"file\" name=\"myfile\" onChange={actionSendCsv} />\n          </div>\n          {/* <input type=\"text\" placeholder=\"Find user\" />\n          <button>Find</button> */}\n          <button\n            onClick={actionDeleteSelected}\n            disabled={usersSelected === 0}\n            className=\"mui-btn mui-btn--small mui-btn--raised mui-btn--danger\"\n          >\n            Delete\n          </button>\n          {/* \n          <button>Filter</button> */}\n        </div>\n      )}\n      <TableContext.Provider value={{ actionSelect, actionShowUser }}>\n        <div className=\"user-table\">\n          <table>\n            <thead>\n              <tr>\n                <th className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"select\"\n                    checked={selectAll}\n                    onChange={() => {\n                      console.log();\n\n                      setSelectAll(!selectAll);\n                      actionSelect();\n                    }}\n                  />\n                </th>\n                {/* <th>Name</th> */}\n                <th>Login Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>Usergroup</th>\n                <th>Last Visit</th>\n                <th>Registrated</th>\n                {/* <th>ID</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {userData\n                ? userData.map(item => {\n                    return <TableRow key={item.userId} userData={item} />;\n                  })\n                : false}\n            </tbody>\n            <tfoot>\n              <tr>{/* <td>/td>\n              <td></td> */}</tr>\n            </tfoot>\n          </table>\n          {spinnerState && <Spiner />}\n          {formMessage && (\n            <FormMessage messange={formMessage.msg} type={formMessage.type} />\n          )}\n          <div className=\"selected\">Selected: {usersSelected}</div>\n        </div>\n      </TableContext.Provider>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./login.scss\";\nimport InputFild from \"../iputFild/inputFild\";\nimport Spiner from \"../spinner/spinner\";\nimport FormMessage from \"../formMessage/formMessage\";\nimport { loginUser } from \"../../services/api\";\n\nexport default function Login() {\n  const [login, setLogin] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [formMessage, setFormMessage] = useState(false);\n  const [spinnerState, setSpinerState] = useState(false);\n  const [saveBtn, setSaveBtn] = useState(false);\n  const loginBtn = useRef();\n\n  useEffect(() => {\n    if (login && password) {\n      setSaveBtn(true);\n    } else {\n      setSaveBtn(false);\n    }\n  }, [login, password]);\n\n  const actionLogin = async e => {\n    e.preventDefault();\n    setSpinerState(true);\n    const servRes = await loginUser({ loginName: login, password: password });\n    setSpinerState(false);\n    if (servRes.result) {\n      document.location.href = \"/\";\n    } else {\n      setFormMessage({ msg: servRes.error, type: 2 });\n    }\n  };\n\n  return (\n    <>\n      <h2 className=\"welcome-text\">Welcome</h2>\n      <form className=\"mui-panel login-form\">\n        <InputFild\n          options={{\n            type: \"text\",\n            id: \"login\",\n            label: \"Login:\",\n            value: \"\",\n            disabled: false\n          }}\n          onValid={setLogin}\n        />\n        <InputFild\n          options={{\n            type: \"password\",\n            id: \"password\",\n            label: \"Password:\",\n            value: \"\"\n          }}\n          onValid={setPassword}\n        />\n        {spinnerState && <Spiner />}\n        {formMessage && (\n          <FormMessage messange={formMessage.msg} type={formMessage.type} />\n        )}\n        <div className=\"form-bottom\">\n          <button\n            ref={loginBtn}\n            onClick={actionLogin}\n            disabled={!saveBtn}\n            className=\"mui-btn   mui-btn--raised mui-btn--primary\"\n          >\n            Login\n          </button>\n          <Link to=\"/signup\" className=\"mui-btn mui-btn--flat\">\n            SignUp\n          </Link>\n        </div>\n      </form>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./signup.scss\";\nimport InputFild from \"../iputFild/inputFild\";\nimport Spiner from \"../spinner/spinner\";\nimport FormMessage from \"../formMessage/formMessage\";\nimport { createUser } from \"../../services/api\";\n\nexport default function Login() {\n  const [login, setLogin] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [email, setEmail] = useState(true);\n  const [phone, setPhone] = useState(true);\n  const [formMessage, setFormMessage] = useState(false);\n  const [saveBtn, setSaveBtn] = useState(false);\n  const [spinnerState, setSpinerState] = useState(false);\n\n  const signBtn = useRef();\n\n  useEffect(() => {\n    if (login && password && email !== false && phone !== false) {\n      setSaveBtn(true);\n    } else {\n      setSaveBtn(false);\n    }\n  }, [login, password, email, phone]);\n\n  const actionSignup = async e => {\n    setSpinerState(true);\n    e.preventDefault();\n    const user = {\n      loginName: login,\n      password: password,\n      email: email,\n      phone: phone\n    };\n    const servRes = await createUser(user);\n    setSpinerState(false);\n    if (!servRes.error) {\n      //TODO: loader and message if OK\n      setFormMessage({ msg: \"registration successful\", type: 0 });\n      setTimeout(() => {\n        document.location.href = \"/\";\n      }, 2000);\n    } else {\n      setFormMessage({ msg: servRes.error, type: 2 });\n    }\n  };\n\n  return (\n    <>\n      <h2 className=\"welcome-text\">Sign Up</h2>\n      <form className=\"mui-panel login-form\">\n        <InputFild\n          options={{\n            type: \"text\",\n            id: \"login\",\n            label: \"Login:\",\n            value: \"\",\n            disabled: false\n          }}\n          onValid={setLogin}\n        />\n        <InputFild\n          options={{\n            type: \"password\",\n            id: \"password\",\n            label: \"Password:\",\n            value: \"\"\n          }}\n          onValid={setPassword}\n        />\n        <InputFild\n          options={{\n            type: \"text\",\n            id: \"email\",\n            label: \"E-mail:\",\n            value: \"\"\n          }}\n          onValid={setEmail}\n        />\n        <InputFild\n          options={{\n            type: \"text\",\n            id: \"phone\",\n            label: \"Phone:\",\n            value: \"+38\"\n          }}\n          onValid={setPhone}\n        />\n        {spinnerState && <Spiner />}\n        {formMessage && (\n          <FormMessage messange={formMessage.msg} type={formMessage.type} />\n        )}\n        <div className=\"form-bottom\">\n          <Link to=\"/ligin\" className=\"mui-btn mui-btn--flat\">\n            Login\n          </Link>\n          <button\n            ref={signBtn}\n            onClick={actionSignup}\n            disabled={!saveBtn}\n            className=\"mui-btn   mui-btn--raised mui-btn--primary\"\n          >\n            SignUp\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport dotenv from \"dotenv\";\n\n// import Cookies from \"js-cookie\";\n// import { useCookies } from \"react-cookie\";\nimport Main from \"./components/main/main\";\nimport LoginPage from \"./components/logIn/login\";\nimport SingupPage from \"./components/signUp/signup\";\nimport { getLocalUser } from \"./services/localStorage\";\nimport { UserContext } from \"./components/usersPage/userContext\";\n\n// import logo from \"./logo.svg\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\ndotenv.config();\nconst isLogined = getLocalUser();\n\nexport default function App() {\n  const [user, setUser] = useState(isLogined);\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/signup\">\n            <SingupPage />\n          </Route>\n\n          <PrivateRoute path=\"/\">\n            <Main />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isLogined ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}