{"version":3,"sources":["logo.svg","services/api.js","services/validator.js","components/users/userCard.js","components/users/userTableRow.js","components/main/main.js","components/users/workbench.js","components/iputFild/inputFild.js","components/logIn/login.js","components/signUp/signup.js","App.js","services/localStorage.js","serviceWorker.js","index.js"],"names":["module","exports","getAllUsers","a","async","res","axios","get","servRes","data","result","length","error","deleteUser","usersId","post","console","createUser","userData","updateUser","id","put","Validator","str","testStr","trim","this","maxLength","len","minLength","isEmail","test","isPhoneNumber","noSpe—ÅialChar","testPassword","mediumRegex","RegExp","Card","props","log","_id","useState","value","name","nameFild","setUserNameFild","loginName","loginFild","setUserLoginFild","password","passFild","setUserPass","phone","phoneFild","setUserPhoneFild","email","emailFild","setUserEmailFild","usergroup","usergroupSelect","setUsergroupSelect","photo","saveBtnstate","setSaveBtnstate","useEffect","fildChange","e","target","errorMessage","isSpecial","isNumber","strLength","fildBlur","isBlur","className","online","src","alt","htmlFor","type","onChange","onBlur","registrated","lastVisit","onClick","preventDefault","user","onClose","disabled","React","memo","actionShowUser","checked","isSelected","actionSelect","routes","path","exact","main","setUserData","errrors","setErrrors","open","userCard","setUserCard","usersSelected","setUsersSelected","getUsers","dbRes","classList","contains","find","item","state","calcSelected","map","placeholder","toDelete","forEach","push","key","SidebarExample","style","display","padding","width","height","background","listStyleType","to","flex","route","index","children","InputFild","set","fild","setFild","setErrorMessage","setIsBlur","cb","label","inputValue","testValue","Login","login","setLogin","setPassword","loginBtn","useRef","current","ref","setEmail","setPhone","signBtn","isLogined","JSON","parse","localStorage","getItem","getLocalUser","PrivateRoute","rest","render","location","pathname","from","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e899c30a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\n\nexport async function lodin(user) {\n  const servRes = await axios.post(\"/login\", user);\n}\n\nexport async function getAllUsers() {\n  let res = {};\n  try {\n    const servRes = await axios.get(\"/users/get\");\n    if (servRes.data.result && servRes.data.result.length > 0) {\n      res.result = servRes.data.result;\n    } else {\n      res.error = \"No users in the database\";\n    }\n  } catch (error) {\n    if (error) {\n      res.error = \"Server does not respond.\";\n    }\n  }\n  return res;\n}\n\nexport async function deleteUser(usersId) {\n  let res = {};\n  try {\n    const servRes = await axios.post(\"/users/delete\", usersId);\n    // if (servRes.data.result && servRes.data.result.length > 0) {\n    //   res.result = servRes.data.result;\n    // } else {\n    //   res.error = \"No comments yet\";\n    // }lastName\n  } catch (error) {\n    console.error(error);\n\n    if (error) {\n      res.error = \"Server does not respond.\";\n    }\n  }\n  return res;\n}\n// export async function deleteUser(usersId) {\n//   let res = {};\n//   try {\n//     const servRes = await axios.post(\"/users/delete\", usersId);\n//     // if (servRes.data.result && servRes.data.result.length > 0) {\n//     //   res.result = servRes.data.result;\n//     // } else {\n//     //   res.error = \"No comments yet\";\n//     // }\n//   } catch (error) {\n//     console.error(error);\n\n//     if (error) {\n//       res.error = \"Server does not respond.\";\n//     }\n//   }\n//   return res;\n// }\n\nexport async function createUser(userData) {\n  let res = {};\n  try {\n    const servRes = await axios.post(\"/users/create\", userData);\n  } catch (error) {\n    if (error) {\n      res.error = \"Server does not respond.\";\n    }\n  }\n  return res;\n}\nexport async function updateUser(id, userData) {\n  let res = {};\n  try {\n    const servRes = await axios.put(`/users/update/${id}`, userData);\n  } catch (error) {\n    if (error) {\n      res.error = \"Server does not respond.\";\n    }\n  }\n  return res;\n}\n","export default function Validator(str) {\n  const testStr = str.trim();\n  this.maxLength = function(len) {\n    if (testStr.length > len) {\n      return false;\n    }\n    return true;\n  };\n\n  this.minLength = function(len) {\n    if (testStr.length < len) {\n      return false;\n    }\n    return true;\n  };\n\n  this.isEmail = function() {\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(testStr)) {\n      return true;\n    }\n    return false;\n  };\n  this.isPhoneNumber = function() {\n    if (/\\+38[0-9]{10,10}$/.test(testStr)) {\n      return true;\n    }\n    return false;\n  };\n  this.noSpe—ÅialChar = function() {\n    if (/[-\\/\\\\^$*?()|[\\]{}]/g.test(testStr)) {\n      return true;\n    }\n    return false;\n  };\n\n  this.testPassword = function() {\n    const mediumRegex = new RegExp(\n      \"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\"\n    );\n    const strongRegex = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    );\n    if (strongRegex.test(testStr)) {\n      return 2;\n    }\n    if (mediumRegex.test(testStr)) {\n      return 1;\n    }\n    return 0;\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./userCard.scss\";\nimport Validator from \"../../services/validator\";\nimport { createUser, updateUser } from \"../../services/api\";\n\nexport default function Card(props) {\n  //const [userData, setUserData] = useState(props.userData);\n  console.log(props.userData._id);\n\n  const [nameFild, setUserNameFild] = useState({\n    value: props.userData.name || \"\"\n  });\n\n  const [loginFild, setUserLoginFild] = useState({\n    value: props.userData.loginName || \"\",\n    error: true\n  });\n\n  const [passFild, setUserPass] = useState({\n    value: props.userData.password || \"\",\n    error: true\n  });\n\n  const [phoneFild, setUserPhoneFild] = useState({\n    value: props.userData.phone || \"+38\"\n  });\n\n  const [emailFild, setUserEmailFild] = useState({\n    value: props.userData.email || \"\"\n  });\n\n  const [usergroupSelect, setUsergroupSelect] = useState(\n    props.userData.usergroup || \"user\"\n  );\n\n  const [photo, setPhoto] = useState({\n    value: props.userData.photo\n  });\n\n  const [saveBtnstate, setSaveBtnstate] = useState(true);\n\n  useEffect(() => {\n    if (\n      !nameFild.error &&\n      !loginFild.error &&\n      !passFild.error &&\n      !emailFild.error &&\n      !phoneFild.error\n    ) {\n      setSaveBtnstate(false);\n    } else {\n      setSaveBtnstate(true);\n    }\n  }, [\n    nameFild.error,\n    loginFild.error,\n    passFild.error,\n    emailFild.error,\n    phoneFild.error\n  ]);\n  const cardClose = e => {\n    e.preventDefault();\n    props.onClose();\n  };\n\n  const cardSave = async e => {\n    e.preventDefault();\n    const user = {\n      name: nameFild.value,\n      loginName: loginFild.value,\n      password: passFild.value,\n      email: emailFild.value,\n      phone: phoneFild.value,\n      photo: \"\",\n      usergroup: usergroupSelect\n    };\n    if (props.userData._id) {\n      const res = await updateUser(props.userData._id, user);\n      console.log(\"upd\");\n    } else {\n      const res = await createUser(user);\n      console.log(\"new\");\n    }\n\n    props.onClose();\n  };\n\n  const fildChange = e => {\n    const testStr = new Validator(e.target.value);\n    let errorMessage = \"\";\n    let isSpecial = false;\n    const noSpe—ÅialChar = testStr.noSpe—ÅialChar();\n    if (testStr.noSpe—ÅialChar()) {\n      errorMessage = `Not allowed special characters -/^$*+?()|[]{}\\\\`;\n      isSpecial = true;\n    }\n    if (e.target.id === \"name\") {\n      if (!testStr.maxLength(50)) {\n        errorMessage = \"Name is too long!\";\n      }\n      if (!testStr.minLength(3)) {\n        errorMessage = \"Name is too short!\";\n      }\n      setUserNameFild({\n        ...nameFild,\n        value: e.target.value,\n        error: errorMessage\n      });\n    }\n\n    if (e.target.id === \"login\") {\n      if (!isSpecial) {\n        errorMessage = false;\n        if (!testStr.maxLength(50)) {\n          errorMessage = \"Name is too long!\";\n        }\n        if (!testStr.minLength(3)) {\n          errorMessage = \"Name is too short!\";\n        }\n      }\n\n      setUserLoginFild({\n        ...loginFild,\n        value: e.target.value,\n        error: errorMessage\n      });\n    }\n\n    if (e.target.id === \"pass\") {\n      if (!isSpecial) {\n        switch (testStr.testPassword()) {\n          case 0:\n            errorMessage =\n              \"Password must have at least 6 characters and include numbers and letters\";\n            break;\n          default:\n            errorMessage = false;\n            break;\n        }\n      }\n      setUserPass({\n        ...passFild,\n        value: e.target.value,\n        error: errorMessage\n      });\n    }\n\n    if (e.target.id === \"email\") {\n      if (!testStr.isEmail()) {\n        errorMessage = \"Email Address not valid\";\n      }\n      setUserEmailFild({\n        ...emailFild,\n        value: e.target.value,\n        error: errorMessage\n      });\n    }\n\n    if (e.target.id === \"phone\") {\n      errorMessage = \"\";\n      let isNumber = true;\n      let strLength = true;\n      if (!/(^\\+\\d+$)/.test(e.target.value)) {\n        errorMessage = \"Phone number is not valid\";\n        isNumber = false;\n      }\n      if (e.target.value.length > 13) {\n        // errorMessage = \"Phone number is not valid\";\n        strLength = false;\n        console.log(phoneFild.value.length);\n      }\n      setUserPhoneFild({\n        ...phoneFild,\n        value: isNumber && strLength ? e.target.value : phoneFild.value,\n        error: errorMessage\n      });\n    }\n\n    if (e.target.id === \"usergroup\") {\n      setUsergroupSelect(e.target.value);\n    }\n  };\n\n  const fildBlur = e => {\n    if (e.target.id === \"name\") {\n      setUserNameFild({\n        ...nameFild,\n        isBlur: true\n      });\n    }\n    if (e.target.id === \"login\") {\n      setUserLoginFild({\n        ...loginFild,\n        isBlur: true\n      });\n    }\n\n    if (e.target.id === \"pass\") {\n      setUserPass({\n        ...passFild,\n        isBlur: true\n      });\n    }\n    if (e.target.id === \"email\") {\n      setUserEmailFild({\n        ...emailFild,\n        isBlur: true\n      });\n    }\n    if (e.target.id === \"phone\") {\n      setUserPhoneFild({\n        ...phoneFild,\n        isBlur: true\n      });\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2>\n          {props.userData._id ? `UserID: ${props.userData._id}` : \"New User\"}\n        </h2>\n        <span\n          className={\n            props.userData.online\n              ? \"status status-online\"\n              : \"status status-offline\"\n          }\n        >\n          {props.userData.online ? \"onLine\" : \"offLine\"}\n        </span>\n      </div>\n      <form>\n        <div className=\"form-body\">\n          <div className=\"user-photo-wr \">\n            <img\n              src={photo.value ? photo.value : \"./noavatar92.png\"}\n              alt=\"user photo\"\n              className=\"user-photo\"\n            />\n            {/* <button>{photo.value ? \"New photo\" : \"ADD photo\"}</button> */}\n          </div>\n          <div className=\"text-filds\">\n            <div className=\"fild\">\n              <label htmlFor=\"name\">\n                Name\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  value={nameFild.value}\n                  onChange={fildChange}\n                  onBlur={fildBlur}\n                />\n              </label>\n              <span className=\"errors\">\n                {nameFild.isBlur && nameFild.error}\n              </span>\n            </div>\n\n            <div className=\"fild\">\n              <label htmlFor=\"login\">\n                Login\n                <input\n                  type=\"text\"\n                  id=\"login\"\n                  value={loginFild.value}\n                  onChange={fildChange}\n                  onBlur={fildBlur}\n                />\n              </label>\n              <span className=\"errors\">\n                {loginFild.isBlur && loginFild.error}\n              </span>\n            </div>\n\n            <div className=\"fild\">\n              <label htmlFor=\"pass\">\n                Password\n                <input\n                  type=\"text\"\n                  id=\"pass\"\n                  value={passFild.value}\n                  onChange={fildChange}\n                  onBlur={fildBlur}\n                />\n              </label>\n              <span className=\"errors\">\n                {passFild.isBlur && passFild.error}\n              </span>\n            </div>\n\n            <div className=\"fild\">\n              <label htmlFor=\"email\">\n                Email\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  value={emailFild.value}\n                  onChange={fildChange}\n                  onBlur={fildBlur}\n                />\n              </label>\n              <span className=\"errors\">\n                {emailFild.isBlur && emailFild.error}\n              </span>\n            </div>\n\n            <div className=\"fild\">\n              <label htmlFor=\"phone\">\n                Phone\n                <input\n                  type=\"text\"\n                  id=\"phone\"\n                  value={phoneFild.value}\n                  onChange={fildChange}\n                />\n              </label>\n              <span className=\"errors\">{phoneFild.error}</span>\n            </div>\n\n            <label htmlFor=\"usergroup\">\n              Usergroup\n              <p>\n                <select\n                  id=\"usergroup\"\n                  value={usergroupSelect}\n                  onChange={fildChange}\n                >\n                  <option value=\"user\">user</option>\n                  <option value=\"admin\">admin</option>\n                  <option value=\"superAdmin\">superAdmin </option>\n                </select>\n              </p>\n            </label>\n            {props.userData.registrated && (\n              <p>Registrated: {props.userData.registrated}</p>\n            )}\n            {props.userData.registrated && (\n              <p>Last Visit: {props.userData.lastVisit}</p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form-footer\">\n          <button onClick={cardSave} disabled={saveBtnstate}>\n            Save\n          </button>\n          <button onClick={cardClose}>Close</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Row(props) {\n  return (\n    <tr\n      onClick={e => {\n        props.actionShowUser(e, props.userData._id);\n      }}\n    >\n      <td className=\"checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"select\"\n          checked={props.userData.isSelected || false}\n          onChange={() => {\n            props.actionSelect(props.userData._id);\n          }}\n        />\n      </td>\n      <td className=\"name\">{props.userData.name}</td>\n      <td>{props.userData.loginName}</td>\n      <td>{props.userData.email}</td>\n      <td>{props.userData.phone}</td>\n      <td>{props.userData.usergroup}</td>\n      <td>{props.userData.lastVisit}</td>\n      <td>{props.userData.registrated}</td>\n      <td>{props.userData._id}</td>\n    </tr>\n  );\n}\n\nexport default React.memo(Row);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport User from \"../users/workbench\";\n// Each logical \"route\" has two components, one for\n// the sidebar and one for the main area. We want to\n// render both of them in different places when the\n// path matches the current URL.\n\n// We are going to use this route config in 2\n// spots: once for the sidebar and once in the main\n// content section. All routes are in the same\n// order they would appear in a <Switch>.\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: () => <h2>Home</h2>\n  },\n  {\n    path: \"/users\",\n    main: User\n  },\n  {\n    path: \"/comments\",\n    main: () => <h2>comments</h2>\n  }\n];\n\nexport default function SidebarExample() {\n  return (\n    <Router>\n      <div style={{ display: \"flex\" }}>\n        <div\n          style={{\n            padding: \"10px\",\n            width: \"10%\",\n            height: \"100vh\",\n            background: \"#f0f0f0\"\n          }}\n        >\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n            <li>\n              <Link to=\"/comments\">Comments</Link>\n            </li>\n          </ul>\n        </div>\n\n        <div style={{ flex: 1, padding: \"10px\" }}>\n          <Switch>\n            {routes.map((route, index) => (\n              // Render more <Route>s with the same paths as\n              // above, but different components this time.\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./user.scss\";\nimport { getAllUsers, deleteUser } from \"../../services/api\";\nimport UserCard from \"./userCard\";\nimport TableRow from \"./userTableRow\";\n\nexport default function UserWorkBench() {\n  const [userData, setUserData] = useState([]);\n  const [errrors, setErrrors] = useState([]);\n  const [userCard, setUserCard] = useState({ open: false, data: {} });\n  const [usersSelected, setUsersSelected] = useState(0);\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    const dbRes = await getAllUsers();\n    setErrrors(dbRes.error);\n    setUserData(dbRes.result);\n  };\n\n  const actionCardClose = () => {\n    setUserCard(state => ({ ...state, open: false, data: {} }));\n  };\n\n  const actionAddNew = () => {\n    setUserCard(state => ({ ...state, open: true }));\n  };\n\n  const actionShowUser = (e, id) => {\n    if (\n      e.target.type !== \"checkbox\" &&\n      !e.target.classList.contains(\"checkbox\")\n    ) {\n      const user = userData.find(item => item._id === id);\n      setUserCard(state => ({ ...state, open: true, data: user }));\n    }\n  };\n\n  const actionSelect = id => {\n    let calcSelected = 0;\n    const data = userData.map(item => {\n      if (item._id === id) {\n        item.isSelected = !item.isSelected;\n      }\n      if (item.isSelected) {\n        calcSelected += 1;\n      }\n      return item;\n    });\n\n    setUserData(data);\n    setUsersSelected(calcSelected);\n  };\n\n  const actionDeleteSelected = async () => {\n    let toDelete = [];\n    userData.forEach(item => {\n      if (item.isSelected) {\n        toDelete.push(item._id);\n      }\n    });\n    const res = await deleteUser(toDelete);\n  };\n\n  return (\n    <>\n      {userCard.open && (\n        <UserCard onClose={actionCardClose} userData={userCard.data} />\n      )}\n      <div className=\"header\">\n        <button onClick={actionAddNew}>ADD User</button>\n        <input type=\"text\" placeholder=\"Find user\" />\n        <button>Find</button>\n        <button onClick={actionDeleteSelected} disabled={usersSelected === 0}>\n          Delete\n        </button>\n\n        <button>Filter</button>\n      </div>\n      {userData ? (\n        <div className=\"user-table\">\n          <table>\n            <thead>\n              <tr>\n                <th className=\"checkbox\">\n                  <input type=\"checkbox\" name=\"select\" disabled />\n                </th>\n                <th>Name</th>\n                <th>Login Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>Usergroup</th>\n                <th>Last Visit</th>\n                <th>Registrated</th>\n                <th>ID</th>\n              </tr>\n            </thead>\n            <tbody>\n              {userData\n                ? userData.map(item => (\n                    <TableRow\n                      key={item._id}\n                      userData={item}\n                      actionSelect={actionSelect}\n                      actionShowUser={actionShowUser}\n                    />\n                  ))\n                : false}\n            </tbody>\n            <tfoot>\n              <tr>{/* <td>/td>\n              <td></td> */}</tr>\n            </tfoot>\n          </table>\n          <div className=\"selected\">Selected: {usersSelected}</div>\n        </div>\n      ) : (\n        <div className=\"error\">{errrors}</div>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Validator from \"../../services/validator\";\nimport \"./inputFild.scss\";\n\nexport default function InputFild(props) {\n  const [fild, setFild] = useState(props.set.value || \"\");\n\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const [isBlur, setIsBlur] = useState(false);\n\n  const fildChange = e => {\n    let inputValue = e.target.value.trim();\n    const testValue = new Validator(inputValue);\n    let isSpecial = testValue.noSpe—ÅialChar();\n    if (isSpecial) {\n      setIsBlur(true);\n      setErrorMessage(`Not allowed special characters ( -/^$*?()|[]{}\\\\ )`);\n    } else {\n      switch (e.target.id) {\n        case \"login\":\n          setErrorMessage(true);\n          if (!testValue.maxLength(50)) {\n            setErrorMessage(\"Login is too long!\");\n          } else if (!testValue.minLength(3)) {\n            setErrorMessage(\"Login is too short!\");\n          } else {\n            setErrorMessage(false);\n          }\n          break;\n\n        case \"password\":\n          setErrorMessage(true);\n          switch (testValue.testPassword()) {\n            case 0:\n              setErrorMessage(\n                \"Password must have at least 6 characters and include numbers and letters\"\n              );\n              break;\n            default:\n              setErrorMessage(false);\n              break;\n          }\n          break;\n\n        case \"email\":\n          setErrorMessage(false);\n          if (!testValue.isEmail() && inputValue.length > 0) {\n            setErrorMessage(\"Email Address not valid\");\n          }\n          break;\n\n        case \"phone\":\n          setErrorMessage(false);\n          if (inputValue.length < 4) {\n            inputValue = \"+38\";\n            setErrorMessage(false);\n          } else {\n            if (!/(^\\+38\\d+$)/.test(inputValue) && inputValue.length > 3) {\n              setErrorMessage(\"Phone number is not valid\");\n              inputValue = fild;\n            }\n            if (inputValue.length > 13) {\n              inputValue = fild;\n            }\n            if (inputValue.length < 13 && !testValue.isPhoneNumber()) {\n              setErrorMessage(\"Phone number is not valid\");\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n      setFild(inputValue);\n    }\n  };\n\n  useEffect(() => {\n    if (!errorMessage) {\n      props.cb(fild);\n    } else {\n      props.cb(false);\n    }\n  }, [errorMessage, fild]);\n\n  const fildBlur = e => {\n    setIsBlur(true);\n  };\n\n  return (\n    <div className=\"fild\">\n      <label htmlFor={props.set.id}>{props.set.label}</label>\n      <input\n        type={props.set.type}\n        id={props.set.id}\n        value={fild}\n        onChange={fildChange}\n        onBlur={fildBlur}\n      />\n      <span className=\"errors\">{isBlur && errorMessage}</span>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport InputFild from \"../iputFild/inputFild\";\nimport \"./login.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Login() {\n  const [login, setLogin] = useState(false);\n  const [password, setPassword] = useState(false);\n  const loginBtn = useRef();\n\n  useEffect(() => {\n    if (login && password) {\n      loginBtn.current.disabled = false;\n    } else {\n      loginBtn.current.disabled = true;\n    }\n  }, [login, password]);\n\n  const actionLogin = () => {};\n\n  return (\n    <>\n      <h2>Welcome</h2>\n      <form>\n        <InputFild\n          set={{\n            type: \"text\",\n            id: \"login\",\n            label: \"Login\"\n          }}\n          cb={setLogin}\n        />\n        <InputFild\n          set={{\n            type: \"password\",\n            id: \"password\",\n            label: \"Password\"\n          }}\n          cb={setPassword}\n        />\n        <button ref={loginBtn}>Login</button>\n        <Link to=\"/signup\">SignUp</Link>\n      </form>\n    </>\n  );\n}\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport InputFild from \"../iputFild/inputFild\";\nimport \"./signup.scss\";\nimport { Link } from \"react-router-dom\";\nimport { createUser } from \"../../services/api\";\n\nexport default function Login() {\n  const [login, setLogin] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [email, setEmail] = useState(true);\n  const [phone, setPhone] = useState(true);\n\n  const signBtn = useRef();\n\n  useEffect(() => {\n    if (login && password && email !== false && phone !== false) {\n      signBtn.current.disabled = false;\n    } else {\n      signBtn.current.disabled = true;\n    }\n  }, [login, password, email, phone]);\n\n  const actionSignup = async e => {\n    e.preventDefault();\n    const user = {\n      loginName: login,\n      password: password,\n      email: email,\n      phone: phone\n    };\n    const res = await createUser(user);\n    console.log(res);\n  };\n\n  return (\n    <>\n      <h2>Sign Up</h2>\n      <form>\n        <InputFild\n          set={{\n            type: \"text\",\n            id: \"login\",\n            label: \"Login\"\n          }}\n          cb={setLogin}\n        />\n        <InputFild\n          set={{\n            type: \"password\",\n            id: \"password\",\n            label: \"Password\"\n          }}\n          cb={setPassword}\n        />\n        <InputFild\n          set={{\n            type: \"text\",\n            id: \"email\",\n            label: \"E-mail\"\n          }}\n          cb={setEmail}\n        />\n        <InputFild\n          set={{\n            type: \"text\",\n            id: \"phone\",\n            label: \"Phone\",\n            value: \"+38\"\n          }}\n          cb={setPhone}\n        />\n        <Link to=\"/ligin\">Login</Link>\n        <button ref={signBtn} onClick={actionSignup}>\n          SignUp\n        </button>\n      </form>\n    </>\n  );\n}\n","import React from \"react\";\nimport Main from \"./components/main/main\";\nimport LoginPage from \"./components/logIn/login\";\nimport SingupPage from \"./components/signUp/signup\";\nimport { getLocalUser } from \"./services/localStorage\";\n\nimport logo from \"./logo.svg\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nconst isLogined = getLocalUser() || false;\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/signup\">\n          <SingupPage />\n        </Route>\n\n        <PrivateRoute path=\"/\">\n          <Main />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isLogined ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","export function setLocalUser(data) {\n  localStorage.setItem(\"userData\", JSON.stringify(data));\n}\n\nexport function getLocalUser() {\n  const data = JSON.parse(localStorage.getItem(\"userData\"));\n  if (data) {\n    return data;\n  }\n  return false;\n}\n\nexport function removeLocalUser() {\n  localStorage.removeItem(\"userData\");\n}\n\nexport function clearLocalStorage() {\n  localStorage.clear();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}